input {
  file {
    type => "json"
    codec => "json"
    path => "/var/log/kibana/kibana.log"
    start_position => beginning 
  }
}
filter {
  grok {
    match => {
      "message" => "Server log: - AlertName: %{DATA:alertName};- Conditions Met: %{DATA:conditionsMet};- Timestamp: %{DATA:contextTime};- Link: %{DATA:link};- Hits: %{DATA:hitList};---"
    }
  }
  mutate {
    add_field => { "hitstring" => "[%{hitList}]" }
    remove_field => [ "hitList" ]
  }
  json {
    source => "hitstring"
    target => "hits"
  }
  mutate {
    remove_field => [ "hitstring" ]
  }
  ruby {
    code => '
      emailBody = ""
      emailBody += "Conditions Met: " + event.get("conditionsMet") + "\n\n"
      emailBody += "Link: " + event.get("link") + "\n\n"
      hitsAll = event.get("hits")
      if hitsAll.is_a? Array

        # remove duplicates
        hits = Array.new
        found = Array.new
        hitsAll.each_index { |x|
          if not found.include?(hitsAll[x]["_source"]["host"]["name"])
            hits << hitsAll[x]
            found << hitsAll[x]["_source"]["host"]["name"]
          end
        }

        # construct hitlist for emailBody
        hitstring = ""
        hits.each_index { |x|
          hostname = hits[x]["_source"]["host"]["name"]
          detail = ""

          # disk usage
          if event.get("alertName") == "disk usage"
            pct = (hits[x]["_source"]["system"]["filesystem"]["used"]["pct"].to_f * 100).round(2)
            detail = pct.nil? ? "" : " @ " + pct.to_s + "% disk usage"

          # etc...
          elsif event.get("alertName") == "something else"
            detail = "something else"
          end

          hitstring += "#{hostname}#{detail}\n"
        }
        emailBody += "Hits:\n" + hitstring + "\n\n"
      end
      event.set("[@metadata][emailBody]", emailBody)
    '
  }
}
output {
  if[log][level] == "ERROR" {
    email {
      to => "trialthree54@gmail.com"
      from => "trialthree54@gmail.com"
      subject => "Alert: %{alertName}"
      body => "%{[@metadata][emailBody]}\n\nRaw Message:\n%{message}"
      authentication => "plain"
      address => "smtp.mailtrap.io"
      domain => "smtp.mailtrap.io"
      port => 2525
      username => "2402bc227b6dc0"
      password => "a85c321904a1c9"
    }
    stdout {
      codec => line {
        format => "%{[@metadata][emailBody]}"
      }
    }
  }
}


